{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KulkarniSr\\\\OneDrive - Version 1\\\\Downloads_Backup\\\\CURSOR-PROJECT\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in on app start\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    console.log('üîÑ AuthContext init - checking saved auth data');\n    console.log('üìä Saved token exists:', !!savedToken);\n    console.log('üìä Saved user exists:', !!savedUser);\n    if (savedToken && savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        console.log('üîÑ Restoring user session:', userData.name);\n        setToken(savedToken);\n        setUser(userData);\n      } catch (error) {\n        console.error('‚ùå Error parsing saved user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    } else {\n      console.log('üîÑ No saved authentication data found');\n    }\n    setLoading(false);\n  }, []);\n  const sendOTP = async phoneNumber => {\n    try {\n      const response = await authAPI.sendOTP(phoneNumber);\n      if (response.success) {\n        var _response$data;\n        toast.success(response.message);\n        // In demo mode, show the OTP in toast for convenience\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.otp) {\n          toast.success(`Demo OTP: ${response.data.otp}`, {\n            duration: 10000\n          });\n        }\n      } else {\n        throw new Error(response.message || 'Failed to send OTP');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Failed to send OTP';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const login = async (phoneNumber, otp) => {\n    try {\n      console.log('üîê Starting login process for:', phoneNumber);\n      const response = await authAPI.verifyOTP(phoneNumber, otp);\n      console.log('üîê Login response:', response);\n      if (response.success && response.data) {\n        const {\n          token: newToken,\n          user: userData\n        } = response.data;\n        console.log('üîê Login successful, setting user data:', userData);\n\n        // Save to localStorage\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // Update state\n        setToken(newToken);\n        setUser(userData);\n        console.log('üîê State updated, user:', userData);\n        toast.success('Login successful! Redirecting to dashboard...');\n\n        // State is updated immediately, React Router will handle the navigation\n      } else {\n        throw new Error(response.message || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('üîê Login error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Login failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = () => {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear state\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const contextValue = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    sendOTP\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","savedToken","localStorage","getItem","savedUser","console","log","userData","JSON","parse","name","error","removeItem","sendOTP","phoneNumber","response","success","_response$data","message","data","otp","duration","_error$response","_error$response$data","errorMessage","login","verifyOTP","newToken","setItem","stringify","_error$response2","_error$response2$data","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KulkarniSr/OneDrive - Version 1/Downloads_Backup/CURSOR-PROJECT/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { authAPI } from '../services/api';\r\nimport { User, AuthContextType } from '../types';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in on app start\r\n    const savedToken = localStorage.getItem('token');\r\n    const savedUser = localStorage.getItem('user');\r\n    \r\n    console.log('üîÑ AuthContext init - checking saved auth data');\r\n    console.log('üìä Saved token exists:', !!savedToken);\r\n    console.log('üìä Saved user exists:', !!savedUser);\r\n    \r\n    if (savedToken && savedUser) {\r\n      try {\r\n        const userData = JSON.parse(savedUser);\r\n        console.log('üîÑ Restoring user session:', userData.name);\r\n        setToken(savedToken);\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error('‚ùå Error parsing saved user data:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    } else {\r\n      console.log('üîÑ No saved authentication data found');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const sendOTP = async (phoneNumber: string): Promise<void> => {\r\n    try {\r\n      const response = await authAPI.sendOTP(phoneNumber);\r\n      if (response.success) {\r\n        toast.success(response.message);\r\n        // In demo mode, show the OTP in toast for convenience\r\n        if (response.data?.otp) {\r\n          toast.success(`Demo OTP: ${response.data.otp}`, { duration: 10000 });\r\n        }\r\n      } else {\r\n        throw new Error(response.message || 'Failed to send OTP');\r\n      }\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Failed to send OTP';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = async (phoneNumber: string, otp: string): Promise<void> => {\r\n    try {\r\n      console.log('üîê Starting login process for:', phoneNumber);\r\n      const response = await authAPI.verifyOTP(phoneNumber, otp);\r\n      console.log('üîê Login response:', response);\r\n      \r\n      if (response.success && response.data) {\r\n        const { token: newToken, user: userData } = response.data;\r\n        \r\n        console.log('üîê Login successful, setting user data:', userData);\r\n        \r\n        // Save to localStorage\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        \r\n        // Update state\r\n        setToken(newToken);\r\n        setUser(userData);\r\n        \r\n        console.log('üîê State updated, user:', userData);\r\n        \r\n        toast.success('Login successful! Redirecting to dashboard...');\r\n        \r\n        // State is updated immediately, React Router will handle the navigation\r\n      } else {\r\n        throw new Error(response.message || 'Login failed');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('üîê Login error:', error);\r\n      const errorMessage = error.response?.data?.message || error.message || 'Login failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    // Clear localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear state\r\n    setToken(null);\r\n    setUser(null);\r\n    \r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const contextValue: AuthContextType = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    logout,\r\n    sendOTP,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}